//============================================================================
//文件名称：uart.h
//功能概要：K60 UART底层驱动程序头文件
//版权所有：苏州大学飞思卡尔嵌入式中心(sumcu.suda.edu.cn)
//版本更新：2011-11-13  V1.0   初始版本
//         2011-12-20  V1.1   规范排版
//         2014-10-14  V2.1   KDS
//============================================================================

#ifndef _UART_H         //防止重复定义（ 开头)
#define _UART_H
	
#include "common.h"     //包含公共要素头文件

//宏定义串口号
#define UART_0 0
#define UART_1 1
#define UART_2 2
#define UART_3 3
#define UART_4 4
#define UART_5 5


//根据串口实际硬件引脚，确定以下宏常量值。
//在此工程中，我们只使用UART0组中的第四个，UART3组中的第一个，和UART5组中的第
//二个，因此我们在此只需要将UART_0_GROUP宏定义为4,UART_3_GROUP_1宏定义为1，
//UART_5_GROUP_2宏定义为2，其他串口的宏定义取消。

//UART_0：1=PTA2~1脚，2=PTA14~15脚，3=PTB17~16脚，4=PTD7~6脚（TX、RX）
//#define UART_0_GROUP    4
//
////UART_1: 2=PTE0~1脚，1=PTC4~3脚（TX、RX）
#define UART_1_GROUP    1
//
////UART_2:1=PTD3~2脚（TX、RX）
//#define UART_2_GROUP    1
//
//UART_3：1=PTB11~10脚，2=PTC17~16脚，3=PTE4~5脚（TX、RX）
//#define UART_3_GROUP    1

//UART_4：1=PTC15~14脚，2=PTE24~25脚（TX、RX）
//#define UART_4_GROUP    1

//UART_5：1=PTD9~8脚，2=PTE8~9脚
//#define UART_5_GROUP    2



//=================接口函数声明============================================
//========================================================================
//函数名称：uart_init
//功能概要：初始化uart模块
//参数说明：uartNo:串口号：UART_0、UART_1、UART_2、UART_3、UART_4、UART_5
//          sel_clk:选择串口时钟源:
//                内核时钟    (96000Khz)
//				   总线时钟    (48000khz)
//          baud:波特率：300、600、1200、2400、4800、9600、19200、115200...
//函数返回：无
//=========================================================================
uint8_t uart_init (uint8_t uartNo, uint32_t baud);

//=========================================================================
//函数名称：uart_re1
//参数说明：uartNo: 串口号
//          fp:接收成功标志的指针:*p=0，成功接收；*p=1，接收失败
//函数返回：接收返回字节
//功能概要：串行接收1个字节
//=========================================================================
uint8_t uart_re1 (uint8_t uartNo,uint8_t *fp);

//=========================================================================
//函数名称：uart_send1
//参数说明：uartNo: 串口号
//          ch:要发送的字节
//函数返回：函数执行状态：0=正常；非0=异常。
//功能概要：串行发送1个字节
//=========================================================================
uint8_t uart_send1(uint8_t uartNo, uint8_t ch);

//=========================================================================
//函数名称：uart_reN                                                         
//功能概要：串行 接收n个字节                                                 
//参数说明：uartNo: 串口号                                                   
//          buff: 接收缓冲区                                                 
//		   len:接收长度                                                     
//函数返回： 1:成功;0:失败                                                    
//=========================================================================
uint8_t uart_reN (uint8_t uartNo ,uint16_t len ,uint8_t* buff);

//=========================================================================
//函数名称：uart_sendN
//参数说明：uartNo: 串口号
//          buff: 发送缓冲区
//          len:发送长度
//函数返回：函数执行状态：0=正常；1=异常。
//功能概要：串行接收n个字节   
//=========================================================================
uint8_t uart_sendN (uint8_t uartNo ,uint16_t len ,uint8_t* buff);

//=========================================================================
//函数名称：uart_send_string
//参数说明：uartNo:UART模块号
//          buff:要发送的字符串的首地址
//函数返回：函数执行状态：0=正常；非0=异常。
//功能概要：从指定UART端口发送一个以'\0'结束的字符串
//=========================================================================
uint8_t uart_send_string(uint8_t uartNo, void *buff);

//=========================================================================
//函数名称：uart_enable_re_int
//参数说明：uartNo: 串口号
//函数返回：无
//功能概要：开串口接收中断
//=========================================================================
void uart_enable_re_int(uint8_t uartNo);

//=========================================================================
//函数名称：uart_disable_re_int
//参数说明：uartNo: 串口号 
//函数返回：无
//功能概要：关串口接收中断
//=========================================================================
void uart_disable_re_int(uint8_t uartNo);



#endif

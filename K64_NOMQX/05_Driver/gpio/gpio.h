//==========================================================================
//文件名称：gpio.h
//功能概要：K64 GPIO底层驱动程序头文件
//==========================================================================

#ifndef _GPIO_H
#define _GPIO_H

//包含公共头文件
#include "common.h"

//定义GPIO模块电平状态
#define GPIO_LEVEL_LOW		(0)		//低电平
#define GPIO_LEVEL_HIGH		(1)		//高电平
#define GPIO_LEVEL_UNKNOWN	(2)		//未知电平，仅在配置为输入时有效

//定义GPIO模块引脚方向
#define GPIO_INPUT		(0)		//输入
#define GPIO_OUTPUT		(1)		//输出

//定义GPIO模块中断类型
#define GPIO_INT_LOW_LEVEL		(8)		//低电平触发
#define GPIO_INT_HIGH_LEVEL		(12)	//高电平触发
#define GPIO_INT_RISING_EDGE	(9)		//上升沿触发
#define GPIO_INT_FALLING_EDGE	(10)	//下降沿触发
#define GPIO_INT_DOUBLE_EDGE	(11)	//双边沿触发

//定义GPIO模块中断标志
#define GPIO_INT_TRUE	(1)		//产生中断
#define GPIO_INT_FALSE	(0)		//未产生中断

//==========================================================================
//函数名称: gpio_init
//函数返回: 无
//参数说明: port_pin:(端口号)|(引脚号)，具体见common.h中宏定义
//         dir:引脚方向，GPIO_INPUT:配置为输入; GPIO_OUTPUT:配置为输出
//         state:输出时为引脚电平状态，输入时为引脚上下拉状态，GPIO_LEVEL_LOW:低电平;
//               GPIO_LEVEL_HIGH:高电平; GPIO_LEVEL_UNKNOWN:未知电平，仅在配置为输入时有效
//功能概要: 初始化指定端口引脚为GPIO功能
//==========================================================================
void gpio_init(uint16 port_pin, uint8 dir, uint8 state);

//==========================================================================
//函数名称: gpio_set
//函数返回: 无
//参数说明: port_pin:(端口号)|(引脚号)，具体见common.h中宏定义
//         state:引脚电平状态，GPIO_LEVEL_LOW:低电平; GPIO_LEVEL_HIGH:高电平
//功能概要: 当引脚配置为输出时，设定引脚状态为指定状态
//==========================================================================
void gpio_set(uint16 port_pin, uint8 state);

//==========================================================================
//函数名称: gpio_reverse
//函数返回: 无
//参数说明: port_pin:(端口号)|(引脚号)，具体见common.h中宏定义
//功能概要: 当引脚配置为输出时，反转其输出状态
//==========================================================================
void gpio_reverse(uint16 port_pin);

//==========================================================================
//函数名称: gpio_pull
//函数返回: 无
//参数说明: port_pin:(端口号)|(引脚号)，具体见common.h中宏定义
//         state:引脚上下拉状态，GPIO_LEVEL_LOW:低电平; GPIO_LEVEL_HIGH:高电平;
//               GPIO_LEVEL_UNKNOWN:未知电平，即关闭上下拉电阻
//功能概要: 当引脚配置为输入时，设定其上下拉状态
//==========================================================================
void gpio_pull(uint16 port_pin, uint8 state);

//==========================================================================
//函数名称: gpio_get
//函数返回: GPIO_LEVEL_LOW:低电平; GPIO_LEVEL_HIGH:高电平
//参数说明: port_pin:(端口号)|(引脚号)，具体见common.h中宏定义
//功能概要: 当引脚配置为输入时，获取其电平状态
//==========================================================================
uint8 gpio_get(uint16 port_pin);

//===========================================================================
//函数名称：gpio_drive_strength
//函数返回：无
//参数说明：port_pin：(端口号)|(引脚号)（例：U_PORTD|(3) 表示为D口3号脚）
//        control：控制引脚的驱动能力，0=正常驱动能力(5mA),默认1=高驱动能力(18mA).
//功能概要： 指定端口引脚被定义为GPIO功能，设定引脚驱动能力
//===========================================================================
void gpio_drive_strength(uint16_t port_pin, uint8_t control);

//===========================================================================
//函数名称：gpio_enable_int
//函数返回：无
//参数说明：port_pin：(端口号)|(引脚号)（例：U_PORTD|(3) 表示为D口3号脚）
//       irqtype：引脚中断类型，由宏定义给出，再次列举如下：
//                  LOW_LEVEL    8      //低电平触发
//                  HIGH_LEVEL   12     //高电平触发
//                  RISING_EDGE  9      //上升沿触发
//                  FALLING_EDGE 10     //下降沿触发
//                  DOUBLE_EDGE  11     //双边沿触发
//功能概要：指定端口引脚被定义为GPIO功能且为输入时，本函数开启引脚中断，并设置中断触发条件。
//===========================================================================
void gpio_enable_int(uint16_t port_pin, uint8_t irqtype);

//===========================================================================
//函数名称：gpio_disable_int
//函数返回：无
//参数说明：port_pin：(端口号)|(引脚号)（例：U_PORTD|(3) 表示为D口3号脚）
//功能概要：当指定端口引脚被定义为GPIO功能且为输入时，本函数关闭引脚中断
//===========================================================================
void gpio_disable_int(uint16_t port_pin);

#endif

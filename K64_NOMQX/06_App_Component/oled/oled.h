//==========================================================================
//文件名称：oled.h
//功能概要：OLED应用驱动程序头文件
//==========================================================================

#ifndef _OLED_H
#define _OLED_H

#include "common.h"
#include "gpio.h"
#include "spi.h"

//==========================================================================
//说明: OLED芯片型号为SSD1306，显示屏分辨率为128*64，即行数为64行，列数为128列，
//     每8行为1页，向OLED写数据时，每次发送一个字节，用于填充1页中的1列，
//     若SPI的位传输顺序为MSB，且OLED未开启反相显示时，数据的高位填充高行，
//     由下至上填充8位，且1表示该像素亮，0表示该像素暗;
//     用坐标轴表示位置时，x轴表示所选列，y轴表示所选页，由左至右列号增大，
//     由上至下页号增大
//==========================================================================

//定义OLED所使用的复位信号引脚
#define OLED_RST		(COM_PORTC|5)	//C5
//定义OLED所使用的数据/命令选择信号引脚
#define OLED_DC			(COM_PORTC|6)	//C6

//定义OLED所使用的SPI模块
#define OLED_SPI_MOD	SPI_MOD2	//SPI2，SCK:B21，SOUT:B22，SIN:B23(未用)
//定义OLED所使用的片选信号
#define OLED_SPI_CS		SPI_CS0		//SPI2，CS0:B20
//定义所使用SPI模块的配置号(注意:若相同SPI模块的相同配置号被用于不同应用构件，请保证它们的配置相同)
#define OLED_SPI_CONFIG			SPI_CONFIG0		//0号配置号
//定义所使用SPI模块的波特率分频因子
#define OLED_SPI_BAUD_SCALER	SPI_BAUD_SCALER_2	//总线时钟频率为60MHz时，波特率为30Mbps
//定义所使用SPI模块的帧格式
#define OLED_SPI_FORMAT		SPI_FORMAT_CPOL0_CPHA0	//平时低电平，第一跳变取数，第二跳变数据上线
//定义所使用SPI模块的帧数据位数
#define OLED_SPI_DATA_SIZE		(8)					//8位，即每帧发送一个字节数据
//定义所使用SPI模块的位传输顺序
#define OLED_SPI_BIT_ORDER		SPI_BIT_ORDER_MSB	//最高有效位，即先发送最高位
//定义所使用SPI模块的CSC延时时间
#define OLED_SPI_CSC_SCALER		SPI_DELAY_SCALER_2	//总线时钟频率为60MHz时，延时时间为33.3ns
//定义所使用SPI模块的ASC延时时间
#define OLED_SPI_ASC_SCALER		SPI_DELAY_SCALER_2	//总线时钟频率为60MHz时，延时时间为33.3ns
//定义所使用SPI模块的DT延时时间
#define OLED_SPI_DT_SCALER		SPI_DELAY_SCALER_2	//总线时钟频率为60MHz时，延时时间为33.3ns

//定义复位信号有效电平
#define OLED_RST_VALID_LEVEL	GPIO_LEVEL_LOW		//有效电平为低
//根据复位信号有效电平定义无效电平
#if(OLED_RST_VALID_LEVEL == GPIO_LEVEL_LOW)
#define OLED_RST_INVALID_LEVEL	GPIO_LEVEL_HIGH		//无效电平为高
#else
#define OLED_RST_INVALID_LEVEL	GPIO_LEVEL_LOW		//无效电平为低
#endif

//定义数据/命令选择信号的数据选择电平
#define OLED_DC_DATA_LEVEL		GPIO_LEVEL_HIGH		//数据选择电平为高
//根据数据/命令选择信号的数据选择电平定义命令选择电平
#if(OLED_DC_DATA_LEVEL == GPIO_LEVEL_HIGH)
#define OLED_DC_CMD_LEVEL	GPIO_LEVEL_LOW		//命令选择电平为低
#else
#define OLED_DC_CMD_LEVEL	GPIO_LEVEL_HIGH		//命令选择电平为高
#endif

//定义OLED分辨率，更改分辨率可以更改显示部分
#define OLED_WIDTH				(128)				//宽度为128个像素
#define OLED_HEIGHT				(64)				//高度为64个像素

//根据屏幕高度定义OLED页数，每8行为1页
#define OLED_PAGE_NUM			(OLED_HEIGHT/8)		//8页

//定义OLED滚动方向
#define OLED_SCROLL_DIR_LEFT	(1)					//向左滚动
#define OLED_SCROLL_DIR_RIGHT	(0)					//向右滚动

//定义OLED滚动间隔
#define OLED_SCROLL_INTERVAL_FRAMES_2	(7)			//每隔2帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_3	(4)			//每隔3帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_4	(5)			//每隔4帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_5	(0)			//每隔5帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_25	(6)			//每隔25帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_64	(1)			//每隔64帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_128	(2)			//每隔128帧滚动一次
#define OLED_SCROLL_INTERVAL_FRAMES_256	(3)			//每隔256帧滚动一次

//定义寻址方式
#define OLED_ADDRESSING_MODE_HORIZONTAL	(0)			//水平寻址
#define OLED_ADDRESSING_MODE_VERTICAL	(1)			//垂直寻址
#define OLED_ADDRESSING_MODE_PAGE		(2)			//按页寻址

//定义COM引脚映射的顺序
#define OLED_COM_PIN_CONFIG_SEQUENTIAL		(0x00)	//按顺序映射
#define OLED_COM_PIN_CONFIG_ALTERNATIVE		(0x10)	//交替映射

//定义COM0-COM31和COM32-COM63交换映射是否使能
#define OLED_COM_PIN_CONFIG_REMAP_ENABLE	(0x20)	//使能交换映射
#define OLED_COM_PIN_CONFIG_REMAP_DISABLE	(0x00)	//关闭交换映射

//定义VCOMH引脚的电压
#define OLED_VCOMH_065		(0x00)		//0.65*VCC
#define OLED_VCOMH_077		(0x20)		//0.77*VCC
#define OLED_VCOMH_083		(0x30)		//0.83*VCC

//==========================================================================
//函数名称: oled_write_data
//函数返回: 无
//参数说明: data:数据字节
//功能概要: 向OLED写一个字节数据
//备注: 该字节数据用于填充当前所在页的所在列，SPI的位传输顺序为MSB时，高位填充高行，
//     OLED未开启反相显示时，1表示该像素亮，0表示该像素暗
//==========================================================================
void oled_write_data(uint8 data);

//==========================================================================
//函数名称: oled_init
//函数返回: 无
//参数说明: 无
//功能概要: 初始化OLED，相应配置在oled.h中
//备注: 使能电荷泵，打开显示，且所有像素均为暗，其余屏幕设置均为复位后设置
//==========================================================================
void oled_init();

//==========================================================================
//函数名称: oled_fill
//函数返回: 无
//参数说明: data:数据字节
//功能概要: 对整个屏幕填充同一个字节数据
//备注: 数据字节为0x00时，屏幕全暗，数据字节为0xFF时，屏幕全亮;
//     寻址方式需为按页寻址
//==========================================================================
void oled_fill(uint8 data);

//==========================================================================
//函数名称: oled_clear_page
//函数返回: 无
//参数说明: page:页号
//功能概要: 填充一页数据为0x00，让该页全暗
//==========================================================================
void oled_clear_page(uint8 page);

//==========================================================================
//函数名称: oled_display_str
//函数返回: 无
//参数说明: col:起始列号，取值范围为[0,OLED_WIDTH-8]，这里为[0,120]
//         page:起始页号，取值范围为[0,OLED_PAGE_NUM-1]，这里为[0,7]
//         str:显示字符串的首地址
//功能概要: 从起始位置开始，显示一个以'\0'结束的字符串
//备注: 仅支持ASCII码字符集的可显示字符;
//     字符大小为8*16，一个字符占用8列、2页;
//     当字符串到达右边界时，会换行至下两页继续显示，
//     当字符串到达下边界时，会换行至第一页继续显示;
//     寻址方式需为按页寻址
//==========================================================================
void oled_display_str(uint8 col, uint8 page, uint8* str);

//==========================================================================
//函数名称: oled_printf
//函数返回: 显示的字符数，若小于0，说明内存不足，显示失败
//参数说明: col:起始列号，取值范围为[0,OLED_WIDTH-8]，这里为[0,120]
//         page:起始页号，取值范围为[0,OLED_PAGE_NUM-1]，这里为[0,7]
//         fmt:格式控制字符串，用法同标准printf
//         ...:可变参数，类型需与格式控制字符串一致
//功能概要: 从起始位置开始，显示格式化后的字符串
//备注: 仅支持ASCII码字符集的可显示字符;
//     字符大小为8*16，一个字符占用8列、2页;
//     当字符串到达右边界时，会换行至下两页继续显示，
//     当字符串到达下边界时，会换行至第一页继续显示;
//     寻址方式需为按页寻址;
//     若要支持浮点数的格式化，编译时需添加-u _printf_float选项
//==========================================================================
int32 oled_printf(uint8 col, uint8 page, uint8* fmt, ...);

//==========================================================================
//函数名称: oled_set_contrast
//函数返回: 无
//参数说明: contrast:对比度值，取值范围为[0,255]，复位值为127
//功能概要: 设置OLED对比度，值越大，屏幕越亮
//==========================================================================
void oled_set_contrast(uint8 contrast);

//==========================================================================
//函数名称: oled_set_entire_display
//函数返回: 无
//参数说明: on:是否开启全部显示:
//            true: 开启全部显示;
//            false:关闭全部显示;
//            复位值为false
//功能概要: 设置是否开启全部显示
//备注: 开启全部显示时，整个屏幕为亮，关闭全部显示时，按照写入数据显示亮暗，
//     且数据不会因开启全部显示而丢失
//==========================================================================
void oled_set_entire_display(bool on);

//==========================================================================
//函数名称: oled_set_inverse_display
//函数返回: 无
//参数说明: on:是否开启反相显示:
//            true: 开启反相显示;
//            false:关闭反相显示;
//            复位值为false
//功能概要: 设置是否开启反相显示
//备注: 开启反相显示时，数据0代表亮，1代表暗，关闭反相显示时，数据0代表暗，1代表亮
//==========================================================================
void oled_set_inverse_display(bool on);

//==========================================================================
//函数名称: oled_set_display_on
//函数返回: 无
//参数说明: on:是否打开显示:
//            true: 打开显示;
//            false:关闭显示;
//            复位值为false
//功能概要: 设置是否打开显示
//备注: 打开显示时，按照写入数据显示亮暗，关闭显示时，整个屏幕为暗，
//     且数据不会因关闭显示而丢失
//==========================================================================
void oled_set_display_on(bool on);

//==========================================================================
//函数名称: oled_set_scroll
//函数返回: 无
//参数说明: dir:水平滚动方向:
//             OLED_SCROLL_DIR_LEFT: 向左滚动;
//             OLED_SCROLL_DIR_RIGHT:向右滚动;
//         start_page:起始滚动页号，取值范围为[0,OLED_PAGE_NUM-1]，这里为[0,7]
//         end_page:结束滚动页号，取值范围为[start_page,OLED_PAGE_NUM-1]，
//                  这里为[start_page,7]
//         interval:滚动间隔:
//                  OLED_SCROLL_INTERVAL_FRAMES_x，每隔x帧滚动一次，x可取值为:
//                  2 | 3 | 4 | 5 | 25 | 64 | 128 | 256
//功能概要: 设置屏幕水平滚动配置
//备注: 起始滚动页和结束滚动页也会滚动;
//     需写开始滚动命令后，才会滚动;
//     屏幕刷新频率越高，一帧的时间越短
//==========================================================================
void oled_set_scroll(uint8 dir, uint8 start_page, uint8 end_page,
		uint8 interval);

//==========================================================================
//函数名称: oled_set_scroll_with_vertical
//函数返回: 无
//参数说明: dir:水平滚动方向:
//             OLED_SCROLL_DIR_LEFT: 向左滚动;
//             OLED_SCROLL_DIR_RIGHT:向右滚动;
//         start_page:水平滚动起始页号，取值范围为[0,OLED_PAGE_NUM-1]，这里为[0,7]
//         end_page:水平滚动结束页号，取值范围为[start_page,OLED_PAGE_NUM-1]，
//                  这里为[start_page,7]
//         interval:滚动间隔:
//                  OLED_SCROLL_INTERVAL_FRAMES_x，每隔x帧滚动一次，x可取值为:
//                  2 | 3 | 4 | 5 | 25 | 64 | 128 | 256
//         fixed_row_num:从第一行起，不参与垂直滚动的行数，取值范围为[0,MUX]
//         scroll_row_num:从不参与垂直滚动的最后一行的下一行起，参与垂直滚动的行数，
//                        取值范围为[0,MUX-fixed_row_num]
//         offset_row_num:每次垂直滚动时偏移行数，取值范围为[0,scroll_row_num)
//功能概要: 设置屏幕水平和垂直滚动配置
//备注: 起始滚动页和结束滚动页也会滚动;
//     需写开始滚动命令后，才会滚动;
//     屏幕刷新频率越高，一帧的时间越短;
//     MUX为复用率，即可显示的行数，复位值为64;
//     垂直滚动方向为由上至下滚动，但上下反置后，为由下至上滚动;
//     水平和垂直滚动单独设置，两者可交叉，即一区域可同时水平和垂直滚动
//==========================================================================
void oled_set_scroll_with_vertical(uint8 dir, uint8 start_page, uint8 end_page,
		uint8 interval, uint8 fixed_row_num, uint8 scroll_row_num,
		uint8 offset_row_num);

//==========================================================================
//函数名称: oled_scroll_start
//函数返回: 无
//参数说明: 无
//功能概要: 写开始滚动命令
//备注: 需要预先设置好屏幕滚动配置和显示的内容
//==========================================================================
void oled_scroll_start();

//==========================================================================
//函数名称: oled_scroll_stop
//函数返回: 无
//参数说明: 无
//功能概要: 写停止滚动命令
//备注: 停止滚动后，垂直滚动的行会回归至原先的位置，但水平滚动的列会停止在当前所在位置
//==========================================================================
void oled_scroll_stop();

//==========================================================================
//函数名称: oled_set_addressing_mode
//函数返回: 无
//参数说明: mode:寻址方式:
//              OLED_ADDRESSING_MODE_HORIZONTAL:水平寻址;
//              OLED_ADDRESSING_MODE_VERTICAL:  垂直寻址;
//              OLED_ADDRESSING_MODE_PAGE:      按页寻址;
//              复位值为OLED_ADDRESSING_MODE_PAGE
//功能概要: 设置寻址方式
//备注: 水平寻址时，写一次数据后，列地址加一，如果列地址到达列的结束地址，
//     重置为开始地址，且页地址加一，如果列和页地址都到达结束地址，全部重置为开始地址;
//
//     垂直寻址时，写一次数据后，页地址加一，如果页地址到达页的结束地址，
//     重置为开始地址，且列地址加一，如果列和页地址都到达结束地址，全部重置为开始地址;
//
//     按页寻址时，写一次数据后，列地址加一，如果列地址到达列的结束地址，
//     重置为开始地址，且页地址不变
//==========================================================================
void oled_set_addressing_mode(uint8 mode);

//==========================================================================
//函数名称: oled_set_pos
//函数返回: 无
//参数说明: col:列号，取值范围为[0,OLED_WIDTH-1]，这里为[0,127]，复位值为0
//         page:页号，取值范围为[0,OLED_PAGE_NUM-1]，这里为[0,7]，复位值为0
//功能概要: 设置当前位置
//备注: 寻址方式需为按页寻址
//==========================================================================
void oled_set_pos(uint8 col, uint8 page);

//==========================================================================
//函数名称: oled_set_address_range
//函数返回: 无
//参数说明: start_col:起始列号，取值范围为[0,OLED_WIDTH-1]，
//                   这里为[0,127]，复位值为0
//         end_col:结束列号，取值范围为[0,OLED_WIDTH-1]，
//                 这里为[0,127]，复位值为127
//         start_page:起始页号，取值范围为[0,OLED_PAGE_NUM-1]，
//                    这里为[0,7]，复位值为0
//         end_page:结束页号，取值范围为[0,OLED_PAGE_NUM-1]，
//                  这里为[0,7]，复位值为7
//功能概要: 设置地址范围
//备注: 寻址方式需为水平寻址或垂直寻址
//==========================================================================
void oled_set_address_range(uint8 start_col, uint8 end_col, uint8 start_page,
		uint8 end_page);

//==========================================================================
//函数名称: oled_set_start_line
//函数返回: 无
//参数说明: row:起始线行号，取值范围为[0,OLED_HEIGHT-1]，这里为[0,63]，复位值为0
//功能概要: 设置起始线
//备注: 设置起始线后，会从该行起显示图像;
//     复用率不为64时，不显示的行不会偏移
//==========================================================================
void oled_set_start_line(uint8 row);

//==========================================================================
//函数名称: oled_set_display_offset
//函数返回: 无
//参数说明: row:偏移后起始行号，取值范围为[0,OLED_HEIGHT-1]，
//             这里为[0,63]，复位值为0
//功能概要: 设置显示偏移
//备注: 设置显示偏移后，会从偏移后起始行号起显示图像;
//     复用率不为64时，不显示的行也会偏移
//==========================================================================
void oled_set_display_offset(uint8 row);

//==========================================================================
//函数名称: oled_set_multiplex_ratio
//函数返回: 无
//参数说明: multiplex_ratio:复用率，取值范围为[16,OLED_HEIGHT]，
//                         这里为[16,64]，复位值为64
//功能概要: 设置复用率，即可显示的行数
//备注: 复用率越高，屏幕刷新频率越低
//==========================================================================
void oled_set_multiplex_ratio(uint8 multiplex_ratio);

//==========================================================================
//函数名称: oled_set_remap
//函数返回: 无
//参数说明: row_remap:是否启用行重映射:
//                   true:左右反置;
//                   false:正常显示;
//                   复位值为false
//         col_remap:是否启用列重映射:
//                   true:上下反置;
//                   false:正常显示;
//                   复位值为false
//功能概要: 设置重映射
//==========================================================================
void oled_set_remap(bool row_remap, bool col_remap);

//==========================================================================
//函数名称: oled_set_com_pin_config
//函数返回: 无
//参数说明: order:COM引脚映射的顺序:
//               OLED_COM_PIN_CONFIG_SEQUENTIAL: 按顺序映射;
//               OLED_COM_PIN_CONFIG_ALTERNATIVE:交替映射;
//               复位值为OLED_COM_PIN_CONFIG_ALTERNATIVE
//         remap:COM0-COM31和COM32-COM63交换映射是否使能:
//               OLED_COM_PIN_CONFIG_REMAP_ENABLE: 使能交换映射;
//               OLED_COM_PIN_CONFIG_REMAP_DISABLE:关闭交换映射;
//               复位值为OLED_COM_PIN_CONFIG_REMAP_DISABLE
//功能概要: 设置COMx引脚到各行的映射配置
//备注: 按顺序映射时，COM0对应ROW0，COM1对应ROW1，以此类推;
//     交替映射时，COM0对应ROW0，COM32对应ROW1，COM1对应ROW2，COM33对应ROW3，
//     以此类推;
//     使能交换映射后，COM0和COM32对应行交换，COM1和COM33对应行交换，以此类推
//==========================================================================
void oled_set_com_pin_config(uint8 order, uint8 remap);

//==========================================================================
//函数名称: oled_set_display_clk
//函数返回: 无
//参数说明: oscillator_freq:振荡器频率，取值范围为[0,15]，复位值为8
//         divide_ratio:显示时钟分频率，取值范围为[1,16]，复位值为1
//功能概要: 设置振荡器频率和显示时钟分频率
//备注: 振荡器频率越高，屏幕刷新频率越高，显示时钟分频率越高，屏幕刷新频率越低;
//     振荡器频率被显示时钟分频率分频后，得到显示时钟周期(DCLK)
//==========================================================================
void oled_set_display_clk(uint8 oscillator_freq, uint8 divide_ratio);

//==========================================================================
//函数名称: oled_set_precharge_period
//函数返回: 无
//参数说明: phase1:阶段1预充电周期，取值范围为[1,15]，复位值为2
//         phase2:阶段2预充电周期，取值范围为[1,15]，复位值为2
//功能概要: 设置预充电周期，单位为显示时钟周期(DCLK)
//备注: 预充电周期越长，屏幕刷新频率越低
//==========================================================================
void oled_set_precharge_period(uint8 phase1, uint8 phase2);

//==========================================================================
//函数名称: oled_set_vcomh
//函数返回: 无
//参数说明: vcomh:VCOMH引脚的电压:
//               OLED_VCOMH_065:0.65*VCC;
//               OLED_VCOMH_077:0.77*VCC;
//               OLED_VCOMH_083:0.83*VCC;
//               复位值为OLED_VCOMH_077
//功能概要: 设置VCOMH引脚的电压
//==========================================================================
void oled_set_vcomh(uint8 vcomh);

//==========================================================================
//函数名称: oled_set_charge_pump
//函数返回: 无
//参数说明: on:是否使能电荷泵:
//            true: 使能电荷泵;
//            false:关闭电荷泵;
//            复位值为false
//功能概要: 设置电荷泵是否使能
//备注: 必须使能电荷泵，屏幕才可以显示
//==========================================================================
void oled_set_charge_pump(bool on);

//==========================================================================
//函数名称: oled_nop
//函数返回: 无
//参数说明: 无
//功能概要: 进行一次空操作
//==========================================================================
void oled_nop();

#endif
